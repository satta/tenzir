"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3674],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},58767:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={},i="summarize",l={unversionedId:"understand-vast/query-language/operators/summarize",id:"understand-vast/query-language/operators/summarize",title:"summarize",description:"The summarize operator for VAST adds a generic transformation step that allows",source:"@site/docs/understand-vast/query-language/operators/summarize.md",sourceDirName:"understand-vast/query-language/operators",slug:"/understand-vast/query-language/operators/summarize",permalink:"/docs/understand-vast/query-language/operators/summarize",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/understand-vast/query-language/operators/summarize.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"replace",permalink:"/docs/understand-vast/query-language/operators/replace"},next:{title:"where",permalink:"/docs/understand-vast/query-language/operators/where"}},s={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"summarize"},"summarize"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"summarize")," operator for VAST adds a generic transformation step that allows\nfor flexible grouping and aggregation."),(0,a.kt)("p",null,"The aggregation operates on the scope of the transformation, which for import\nand export is the size of a single batch (configurable as\n",(0,a.kt)("inlineCode",{parentName:"p"},"vast.import.batch-size"),"), and for compaction is the size of a partition\n(configurable as ",(0,a.kt)("inlineCode",{parentName:"p"},"vast.max-partition-size"),")."),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"summarize")," transform step has multiple configuration options. In the places\nWhere the configuration refers to a field name, it is also possible to specify a\nsuffix of a nested field instead spelling out the full name."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"group-by"),": A list of columns to group by. VAST internally calculates the\ncombined hash for all the configured columns for every row, and sorts the data\ninto buckets for aggregation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"time-resolution"),": An optional duration value that specifies the rounding of\ntime values in the ",(0,a.kt)("inlineCode",{parentName:"li"},"group-by")," section. For example, ",(0,a.kt)("inlineCode",{parentName:"li"},"01:48")," is rounded down to\n",(0,a.kt)("inlineCode",{parentName:"li"},"01:00")," when a 1-hour ",(0,a.kt)("inlineCode",{parentName:"li"},"time-resolution")," is used."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sum")," / ",(0,a.kt)("inlineCode",{parentName:"li"},"min")," / ",(0,a.kt)("inlineCode",{parentName:"li"},"max")," / ",(0,a.kt)("inlineCode",{parentName:"li"},"any")," / ",(0,a.kt)("inlineCode",{parentName:"li"},"all"),": A list of columns to perform the\nrespective aggregation function on within the grouped buckets. Fields that\nhave no such function specified and are not part of the ",(0,a.kt)("inlineCode",{parentName:"li"},"group-by")," columns are\ndropped from the output.")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"summarize:\n  group-by:\n    - timestamp\n    - src_ip\n    - dest_ip\n    - dest_port\n    - proto\n    - event_type\n  time-resolution: 1 minute\n  sum:\n    - pcap_cnt\n    - flow.pkts_toserver\n    - flow.pkts_toclient\n    - flow.bytes_toserver\n    - flow.bytes_toclient\n  min:\n    - flow.start\n  max:\n    - flow.end\n  any:\n    - flow.alerted\n")))}m.isMDXComponent=!0}}]);