"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67038],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},45275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>h,default:()=>v,frontMatter:()=>f,metadata:()=>k,toc:()=>b});var r=n(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&c(e,n,t[n]);if(s)for(var n of s(t))p.call(t,n)&&c(e,n,t[n]);return e},u=(e,t)=>i(e,o(t)),d=(e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&s)for(var r of s(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n};const f={sidebar_position:1},h="Git and GitHub Workflow",k={unversionedId:"contribute/workflow",id:"version-Tenzir v4.11/contribute/workflow",title:"Git and GitHub Workflow",description:"The following diagram visualizes our branching model:",source:"@site/versioned_docs/version-Tenzir v4.11/contribute/workflow.md",sourceDirName:"contribute",slug:"/contribute/workflow",permalink:"/Tenzir v4.11/contribute/workflow",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-Tenzir v4.11/contribute/workflow.md",tags:[],version:"Tenzir v4.11",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Code of Conduct",permalink:"/Tenzir v4.11/contribute/code-of-conduct"},next:{title:"Coding Style",permalink:"/Tenzir v4.11/contribute/coding-style"}},g={},b=[{value:"Commit Messages",id:"commit-messages",level:2}],w={toc:b},y="wrapper";function v(e){var t=e,{components:n}=t,a=d(t,["components"]);return(0,r.kt)(y,u(m(m({},w),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",m({},{id:"git-and-github-workflow"}),"Git and GitHub Workflow"),(0,r.kt)("p",null,"The following diagram visualizes our branching model:"),(0,r.kt)("p",null,(0,r.kt)("img",m({parentName:"p"},{src:"https://user-images.githubusercontent.com/53797/156560785-c7279447-63eb-4428-9a11-9c90cc03acc8.png",alt:"Branching Model"}))),(0,r.kt)("p",null,"Our git workflow looks as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch reflects the latest state of development, and should\nalways compile.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In case we need to release a hotfix, we use dedicated patch release branches.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"stable")," branch always points to the latest release that is not a release\ncandidate. It exists so support a streamlined workflow for some packaging\ntools (e.g., Nix).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For new features or fixes, use ",(0,r.kt)("em",{parentName:"p"},"topic branches")," that branch off ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," with\na naming convention of ",(0,r.kt)("inlineCode",{parentName:"p"},"topic/description"),". After completing work in a topic\nbranch, check the following steps to prepare for a merge back into ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Squash your commits such that each commit reflects a self-contained change.\nYou can interactively rebase all commits in your current pull request with\n",(0,r.kt)("inlineCode",{parentName:"p"},"git rebase --interactive $(git merge-base origin/master HEAD)"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create a pull request to ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," on GitHub.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Wait for the results of continuous integration tools and fix any reported\nissues.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Ask a maintainer to review your work when your changes merge cleanly. If\nyou don't want a specific maintainer's feedback, ask for a team review from\n",(0,r.kt)("a",m({parentName:"p"},{href:"https://github.com/orgs/tenzir/teams/vast"}),"tenzir/vast"),", or for more\nspecific aspects from\n",(0,r.kt)("a",m({parentName:"p"},{href:"https://github.com/orgs/tenzir/teams/devops"}),"tenzir/devops")," and\n",(0,r.kt)("a",m({parentName:"p"},{href:"https://github.com/orgs/tenzir/teams/secops"}),"tenzir/secops"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Address the feedback articulated during the review.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A maintainer will merge the topic branch into ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," after it passes the\ncode review.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Similarly, for features or fixes relating to a specific GitHub issue, use\n",(0,r.kt)("em",{parentName:"p"},"topic branches")," that branch off ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," with a naming convention of\n",(0,r.kt)("inlineCode",{parentName:"p"},"topic/XXX"),", replacing XXX with a short description of the issue.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Internally, we use ",(0,r.kt)("a",m({parentName:"p"},{href:"https://shortcut.com/"}),"Shortcut")," for project management,\nand employees are advised to create ",(0,r.kt)("em",{parentName:"p"},"story branches")," that branch off ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),"\nwith a naming convention of ",(0,r.kt)("inlineCode",{parentName:"p"},"story/sc-XXX/description"),", replacing XXX with\nthe story number."))),(0,r.kt)("h2",m({},{id:"commit-messages"}),"Commit Messages"),(0,r.kt)("p",null,"Commit messages are formatted according to ",(0,r.kt)("a",m({parentName:"p"},{href:"https://github.com/agis/git-style-guide"}),"this git style\nguide"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'The first line succinctly summarizes the changes in no more than 50\ncharacters. It is capitalized and written in and imperative present tense:\ne.g., "Fix a bug" as opposed to "Fixes a bug" or "Fixed a bug". As a\nmnemonic, prepend "When applied, this commit will" to the commit summary and\ncheck if it builds a full sentence.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The first line does not contain a dot at the end. (Think of it as the header\nof the following description).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The second line is empty.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Optional long descriptions as full sentences begin on the third line,\nindented at 72 characters per line, explaining ",(0,r.kt)("em",{parentName:"p"},"why")," the change is needed,\n",(0,r.kt)("em",{parentName:"p"},"how")," it addresses the underlying issue, and what ",(0,r.kt)("em",{parentName:"p"},"side-effects")," it might\nhave."))))}v.isMDXComponent=!0}}]);