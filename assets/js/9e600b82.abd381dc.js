"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[23174],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>b,default:()=>g,frontMatter:()=>f,metadata:()=>y,toc:()=>h});var r=n(3905),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,s=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&s(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&s(e,n,t[n]);return e},d=(e,t)=>a(e,i(t)),m=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n};const f={},b="Lookup Table",y={unversionedId:"contexts/lookup-table",id:"version-v4.16/contexts/lookup-table",title:"Lookup Table",description:"An in-memory hash table with a single key column for enriching with arbitrary",source:"@site/versioned_docs/version-v4.16/contexts/lookup-table.md",sourceDirName:"contexts",slug:"/contexts/lookup-table",permalink:"/v4.16/contexts/lookup-table",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.16/contexts/lookup-table.md",tags:[],version:"v4.16",frontMatter:{},sidebar:"docsSidebar",previous:{title:"GeoIP",permalink:"/v4.16/contexts/geoip"},next:{title:"Data Model",permalink:"/v4.16/data-model"}},k={},h=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>--key &lt;field&gt;</code>",id:"--key-field",level:3},{value:"<code>--erase</code>",id:"--erase",level:3}],v={toc:h},O="wrapper";function g(e){var t=e,{components:n}=t,o=m(t,["components"]);return(0,r.kt)(O,d(u(u({},v),o),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",u({},{id:"lookup-table"}),"Lookup Table"),(0,r.kt)("p",null,"An in-memory hash table with a single key column for enriching with arbitrary\ndata."),(0,r.kt)("h2",u({},{id:"synopsis"}),"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{}),"context create  <name> lookup-table\ncontext update  <name> [--key <field>] [--erase]\ncontext delete  <name>\ncontext reset   <name>\ncontext save    <name>\ncontext load    <name>\ncontext inspect <name>\nenrich <name>\nlookup <name>\n")),(0,r.kt)("h2",u({},{id:"description"}),"Description"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"lookup-table")," context behaves like an ordinary table with a unique key column\nto be used during enrichment."),(0,r.kt)("admonition",u({},{title:"IP and Subnet Optimization",type:"tip"}),(0,r.kt)("p",{parentName:"admonition"},"Lookup tables have one special optimization: if you use ",(0,r.kt)("inlineCode",{parentName:"p"},"subnet")," values as key\ntype, you can probe them with values of type ",(0,r.kt)("inlineCode",{parentName:"p"},"ip")," to perform a longest-prefix\nmatch on all subnets. That is, the lookup table will yield the closest/narrowest\nmatch."),(0,r.kt)("p",{parentName:"admonition"},"For example, consider a lookup table with keys ",(0,r.kt)("inlineCode",{parentName:"p"},"10.0.0.0/8")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"10.0.1.0/24"),".\nIf you perform a lookup with IP address ",(0,r.kt)("inlineCode",{parentName:"p"},"10.0.0.1"),", the first subnet will match,\nbut if you query with ",(0,r.kt)("inlineCode",{parentName:"p"},"10.0.1.1"),", the second subnet will match because it is\nmore specific.")),(0,r.kt)("p",null,"The following options are currently supported for the ",(0,r.kt)("inlineCode",{parentName:"p"},"lookup-table")," context:"),(0,r.kt)("h3",u({},{id:"--key-field"}),(0,r.kt)("inlineCode",{parentName:"h3"},"--key <field>")),(0,r.kt)("p",null,"The field in the input that holds the unique key for the lookup table."),(0,r.kt)("p",null,"Defaults to the first field of the input."),(0,r.kt)("h3",u({},{id:"--erase"}),(0,r.kt)("inlineCode",{parentName:"h3"},"--erase")),(0,r.kt)("p",null,"When updating a lookup table, erase fields with matching keys instead of adding\nnew entries."))}g.isMDXComponent=!0}}]);