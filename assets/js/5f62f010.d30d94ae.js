"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[36106],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,d=u["".concat(s,".").concat(f)]||u[f]||m[f]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},67185:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>g,default:()=>O,frontMatter:()=>d,metadata:()=>y,toc:()=>v});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&p(e,n,t[n]);return e},m=(e,t)=>o(e,i(t)),f=(e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n};const d={},g="Suricata",y={unversionedId:"integrations/suricata",id:"integrations/suricata",title:"Suricata",description:"Suricata is network monitor with a rule matching engine",source:"@site/docs/integrations/suricata.md",sourceDirName:"integrations",slug:"/integrations/suricata",permalink:"/next/integrations/suricata",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/integrations/suricata.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Splunk",permalink:"/next/integrations/splunk"},next:{title:"Velociraptor",permalink:"/next/integrations/velociraptor"}},k={},v=[{value:"Ingest EVE JSON logs into a node",id:"ingest-eve-json-logs-into-a-node",level:2},{value:"Import from a file",id:"import-from-a-file",level:3},{value:"Import from a Unix domain socket",id:"import-from-a-unix-domain-socket",level:3}],b={toc:v},h="wrapper";function O(e){var t=e,{components:n}=t,a=f(t,["components"]);return(0,r.kt)(h,m(u(u({},b),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",u({},{id:"suricata"}),"Suricata"),(0,r.kt)("p",null,(0,r.kt)("a",u({parentName:"p"},{href:"https://suricata.io/"}),"Suricata")," is network monitor with a rule matching engine\nto detect threats."),(0,r.kt)("p",null,"Use Tenzir to acquire, process, and store Suricata logs."),(0,r.kt)("h2",u({},{id:"ingest-eve-json-logs-into-a-node"}),"Ingest EVE JSON logs into a node"),(0,r.kt)("p",null,(0,r.kt)("a",u({parentName:"p"},{href:"https://docs.suricata.io/en/latest/output/eve/eve-json-output.html"}),"EVE JSON"),"\nis the log format in which Suricata generates events."),(0,r.kt)("p",null,"A typical Suricata configuration looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yaml",metastring:"title=suricata.yaml",title:"suricata.yaml"}),"outputs:\n  # Extensible Event Format (nicknamed EVE) event log in JSON format\n  - eve-log:\n      enabled: yes\n      filetype: regular #regular|syslog|unix_dgram|unix_stream|redis\n      filename: eve.json\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"filetype")," setting determines how you'd process the log file."),(0,r.kt)("h3",u({},{id:"import-from-a-file"}),"Import from a file"),(0,r.kt)("p",null,"By default, Suricata uses the file type ",(0,r.kt)("inlineCode",{parentName:"p"},"regular"),". Ingest into a node as\nfollows:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{}),"from /path/to/eve.json read suricata\n| import\n")),(0,r.kt)("h3",u({},{id:"import-from-a-unix-domain-socket"}),"Import from a Unix domain socket"),(0,r.kt)("p",null,"If your ",(0,r.kt)("inlineCode",{parentName:"p"},"filetype")," setting is ",(0,r.kt)("inlineCode",{parentName:"p"},"unix_stream"),", you need to create a Unix domain\nsocket first, e.g., like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"nc -U -l /tmp/eve.socket\n")),(0,r.kt)("p",null,"Then you can use the same pipeline as above, since Tenzir's\n",(0,r.kt)("a",u({parentName:"p"},{href:"/next/connectors/file"}),(0,r.kt)("inlineCode",{parentName:"a"},"file"))," automatically detects the file type."))}O.isMDXComponent=!0}}]);