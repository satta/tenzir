"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[55866],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(n),u=o,f=s["".concat(p,".").concat(u)]||s[u]||m[u]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7987:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>b,default:()=>k,frontMatter:()=>f,metadata:()=>v,toc:()=>y});var r=n(3905),o=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&d(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&d(e,n,t[n]);return e},m=(e,t)=>i(e,a(t)),u=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n};const f={},b="GeoIP",v={unversionedId:"contexts/geoip",id:"version-Tenzir v4.9/contexts/geoip",title:"GeoIP",description:"A context for enriching IP addresses with geographical data.",source:"@site/versioned_docs/version-Tenzir v4.9/contexts/geoip.md",sourceDirName:"contexts",slug:"/contexts/geoip",permalink:"/Tenzir v4.9/contexts/geoip",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-Tenzir v4.9/contexts/geoip.md",tags:[],version:"Tenzir v4.9",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Bloom Filter",permalink:"/Tenzir v4.9/contexts/bloom-filter"},next:{title:"Lookup Table",permalink:"/Tenzir v4.9/contexts/lookup-table"}},h={},y=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>--db-path &lt;mmdb&gt;</code>",id:"--db-path-mmdb",level:3},{value:"<code>--field &lt;field&gt;</code>",id:"--field-field",level:3}],g={toc:y},O="wrapper";function k(e){var t=e,{components:n}=t,o=u(t,["components"]);return(0,r.kt)(O,m(s(s({},g),o),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",s({},{id:"geoip"}),"GeoIP"),(0,r.kt)("p",null,"A context for enriching IP addresses with geographical data."),(0,r.kt)("h2",s({},{id:"synopsis"}),"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{}),"context create <name> geoip [--db-path <mmdb>]\ncontext delete <name>\ncontext reset  <name> [--db-path <mmdb>]\ncontext save   <name>\ncontext load   <name>\nenrich <name> --field <field>\nlookup <name> --field <field>\n")),(0,r.kt)("h2",s({},{id:"description"}),"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"geoip")," context uses a ",(0,r.kt)("a",s({parentName:"p"},{href:"https://www.maxmind.com/"}),"MaxMind")," database\nto perform IP address lookups."),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"context reset <name> --db-path <mmdb>")," to initialize the database at path\n",(0,r.kt)("inlineCode",{parentName:"p"},"<mmdb>"),". Omitting ",(0,r.kt)("inlineCode",{parentName:"p"},"--db-path")," causes a reload of a previously initialized\ndatabase file."),(0,r.kt)("h3",s({},{id:"--db-path-mmdb"}),(0,r.kt)("inlineCode",{parentName:"h3"},"--db-path <mmdb>")),(0,r.kt)("p",null,"The path to the MaxMind database file."),(0,r.kt)("p",null,"You can provide any database in ",(0,r.kt)("a",s({parentName:"p"},{href:"https://maxmind.github.io/MaxMind-DB/"}),"MMDB\nformat"),"."),(0,r.kt)("h3",s({},{id:"--field-field"}),(0,r.kt)("inlineCode",{parentName:"h3"},"--field <field>")),(0,r.kt)("p",null,"The name of the field to use as IP address lookup."),(0,r.kt)("p",null,"Only IP addresses and strings work with this context."))}k.isMDXComponent=!0}}]);