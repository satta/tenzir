"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8314],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return a?n.createElement(h,o(o({ref:t},u),{},{components:a})):n.createElement(h,o({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(87462),r=a(67294),l=a(86010),o=a(72389),i=a(67392),s=a(7094),p=a(12466);const u="tabList__CuJ",c="tabItem_LNqP";function m(e){var t,a;const{lazy:o,block:m,defaultValue:d,values:h,groupId:y,className:v}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=h?h:b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),f=(0,i.l)(g,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===d?d:null!=(t=null!=d?d:null==(a=b.find((e=>e.props.default)))?void 0:a.props.value)?t:b[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:T,setTabGroupChoices:N}=(0,s.U)(),[w,P]=(0,r.useState)(k),x=[],{blockElementScrollPositionUntilNextRender:S}=(0,p.o5)();if(null!=y){const e=T[y];null!=e&&e!==w&&g.some((t=>t.value===e))&&P(e)}const O=e=>{const t=e.currentTarget,a=x.indexOf(t),n=g[a].value;n!==w&&(S(t),P(n),null!=y&&N(y,String(n)))},A=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=x.indexOf(e.currentTarget)+1;a=null!=(n=x[t])?n:x[0];break}case"ArrowLeft":{var r;const t=x.indexOf(e.currentTarget)-1;a=null!=(r=x[t])?r:x[x.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},v)},g.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>x.push(e),onKeyDown:A,onFocus:O,onClick:O},o,{className:(0,l.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,o.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},81744:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=a(87462),r=(a(67294),a(3905)),l=a(65488),o=a(85162);const i={},s="Python",p={unversionedId:"use-vast/integrate/python",id:"use-vast/integrate/python",title:"Python",description:"VAST ships with Python bindings to enable interaction with VAST in the Python",source:"@site/docs/use-vast/integrate/python.md",sourceDirName:"use-vast/integrate",slug:"/use-vast/integrate/python",permalink:"/docs/use-vast/integrate/python",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/use-vast/integrate/python.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Execute Sigma Rules",permalink:"/docs/use-vast/detect/execute-sigma-rules"},next:{title:"Threat Bus",permalink:"/docs/use-vast/integrate/threatbus/"}},u={},c=[{value:"Install the PyPI package",id:"install-the-pypi-package",level:2},{value:"Use PyVAST",id:"use-pyvast",level:2},{value:"Import a log file",id:"import-a-log-file",level:3},{value:"Run a query",id:"run-a-query",level:3},{value:"Use PyVAST as module",id:"use-pyvast-as-module",level:2}],m={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"python"},"Python"),(0,r.kt)("p",null,"VAST ships with Python bindings to enable interaction with VAST in the Python\necosystem. We distribute the bindings as ",(0,r.kt)("a",{parentName:"p",href:"https://pypi.org/project/pyvast/"},"PyPI\npackage")," called\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tenzir/vast/tree/master/pyvast"},"PyVAST"),"."),(0,r.kt)("h2",{id:"install-the-pypi-package"},"Install the PyPI package"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"pip")," to install PyVAST:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install pyvast\n")),(0,r.kt)("h2",{id:"use-pyvast"},"Use PyVAST"),(0,r.kt)("p",null,"PyVAST has a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/asyncio.html"},"asyncio"),"-based\nwrapper around VAST's command line interface that uses fluent method chaining.\nPyVAST supports all VAST commands by passing arguments to the ",(0,r.kt)("inlineCode",{parentName:"p"},"vast")," exectuable."),(0,r.kt)("p",null,"Every command line invocation has an equivalent Python-native\ninvocation of chained (sub-)commands via the ",(0,r.kt)("inlineCode",{parentName:"p"},"."),"-notation. You can pass\narguments as via Python's ",(0,r.kt)("inlineCode",{parentName:"p"},"*args")," and parameters as ",(0,r.kt)("inlineCode",{parentName:"p"},"**kwargs"),". When you are\ndone chaining methods, finalize the command invocation with a call to ",(0,r.kt)("inlineCode",{parentName:"p"},".exec()"),"."),(0,r.kt)("p",null,"Here are two examples."),(0,r.kt)("h3",{id:"import-a-log-file"},"Import a log file"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'proc = await vast.import_().zeek(read="/path/to/file").exec()\nstdout, stderr = await proc.communicate()\nprint(stdout)\n')),(0,r.kt)("p",null,"NB: since ",(0,r.kt)("inlineCode",{parentName:"p"},"import")," is a reserved keyword, we add ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," as suffix.")),(0,r.kt)(o.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast import --read=/path/to/file zeek\n")))),(0,r.kt)("h3",{id:"run-a-query"},"Run a query"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'proc = await vast.export(max_events=10).json("192.167.1.102").exec()\nstdout, stderr = await proc.communicate()\nprint(stdout)\n'))),(0,r.kt)(o.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast export --max-events=10 json 192.168.1.104\n")))),(0,r.kt)("h2",{id:"use-pyvast-as-module"},"Use PyVAST as module"),(0,r.kt)("p",null,"You can use PyVAST as Python module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"from pyvast import VAST\n")),(0,r.kt)("p",null,"Once imported, there are three optional keyword arguments to instruct PyVAST\nwith:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"binary")," (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"vast"),"): the path to the VAST executable. In case the\nVAST binary is not in your ",(0,r.kt)("inlineCode",{parentName:"p"},"$PATH"),", set this to the actual path to the VAST\nbinary.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"endpoint")," (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:42000"),"): the endpoint of the VAST node.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"logger")," (optional): a custom ",(0,r.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/logging.html#logger-objects"},"logging.logger")," object for your\napplication."))),(0,r.kt)("p",null,"The following example shows a minimalistic working example with all required\nimport statements."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'#!/usr/bin/env python3\n\nimport asyncio\nfrom pyvast import VAST\n\nasync def example():\n  vast = VAST(binary="/opt/vast/bin/vast")\n  await vast.test_connection()\n\n  proc = await vast.export(max_events=10).json("192.168.1.103").exec()\n  stdout, stderr = await proc.communicate()\n  print(stdout)\n\nasyncio.run(example())\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tenzir/vast/tree/master/pyvast/example"},"PyVAST example directory")," illustrates another use case involving\nreading data via Arrow and running a continuous query."))}d.isMDXComponent=!0}}]);