"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6075],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<s;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const s={sidebar_position:0},i="Design Goals",o={unversionedId:"use-vast/integrate/threatbus/understand/design-goals",id:"use-vast/integrate/threatbus/understand/design-goals",title:"Design Goals",description:"We designed Threat Bus with the following principles in mind:",source:"@site/docs/use-vast/integrate/threatbus/understand/design-goals.md",sourceDirName:"use-vast/integrate/threatbus/understand",slug:"/use-vast/integrate/threatbus/understand/design-goals",permalink:"/docs/use-vast/integrate/threatbus/understand/design-goals",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/use-vast/integrate/threatbus/understand/design-goals.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docsSidebar",previous:{title:"Use",permalink:"/docs/use-vast/integrate/threatbus/use"},next:{title:"Subscriptions and Message Passing",permalink:"/docs/use-vast/integrate/threatbus/understand/subscription-message-passing"}},l={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"design-goals"},"Design Goals"),(0,a.kt)("p",null,"We designed Threat Bus with the following principles in mind:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Plugin-Based Architecture"),": there are simply too many security tools out\nthere to justify any other type of architecture. The plugin architecture\nreduces the quadratic complexity of interconnecting ",(0,a.kt)("em",{parentName:"p"},"N")," tools with each\nanother to simply supporting ",(0,a.kt)("em",{parentName:"p"},"N")," independent tools. Security tools only need\nto how to connect with Threat Bus and are automatically integrated with every\nother tool that is connected to the bus.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Open Standard Formats"),": Threat Bus uses the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.oasis-open.org/cti/stix/v2.1/stix-v2.1.html"},"STIX\n2.1")," format for\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.oasis-open.org/cti/stix/v2.1/cs02/stix-v2.1-cs02.html#_muftrcpnf89v"},"indicators"),"\nand\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.oasis-open.org/cti/stix/v2.1/cs02/stix-v2.1-cs02.html#_a795guqsap3r"},"sightings"),".\nThe goal is to comply with industry standards so that modern tools can\nintegrate natively with Threat Bus with minimal message mapping overhead.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Modular Dependency Management"),": plugins are packaged individually and can\nbe installed independently of each other. This way, a Threat Bus host system\ncan keep the list of required dependencies small and manageable.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Community Project"),": Threat Bus is a free and open source project. We hope\nto come to a point where authors of awesome security tools can write the\nThreat Bus integration themselves. All contributions are welcome!")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Inherited Scalability"),": Conceptually, Threat Bus is a simple message\npassing engine. It inherits the scalability of its backbone. For example,\nusing a distributed backbone, like\n",(0,a.kt)("a",{parentName:"p",href:"plugins/backbones/rabbitmq"},"RabbitMQ"),", allows for deploying\nmultiple Threat Bus hosts in a scalable fashion."))))}u.isMDXComponent=!0}}]);