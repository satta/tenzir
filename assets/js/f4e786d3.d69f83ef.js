"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[98061],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),u=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=u(n),m=r,f=s["".concat(p,".").concat(m)]||s[m]||d[m]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62595:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>k,default:()=>w,frontMatter:()=>f,metadata:()=>b,toc:()=>y});var o=n(3905),r=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&c(e,n,t[n]);return e},d=(e,t)=>a(e,i(t)),m=(e,t)=>{var n={};for(var o in e)p.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&l)for(var o of l(e))t.indexOf(o)<0&&u.call(e,o)&&(n[o]=e[o]);return n};const f={},k="Lookup Table",b={unversionedId:"contexts/lookup-table",id:"version-v4.18/contexts/lookup-table",title:"Lookup Table",description:"An in-memory hash table with a single key column for enriching with arbitrary",source:"@site/versioned_docs/version-v4.18/contexts/lookup-table.md",sourceDirName:"contexts",slug:"/contexts/lookup-table",permalink:"/contexts/lookup-table",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.18/contexts/lookup-table.md",tags:[],version:"v4.18",frontMatter:{},sidebar:"docsSidebar",previous:{title:"GeoIP",permalink:"/contexts/geoip"},next:{title:"Data Model",permalink:"/data-model"}},h={},y=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>--key &lt;field&gt;</code>",id:"--key-field",level:3},{value:"`<code>--create-timeout &lt;duration&gt;</code>",id:"--create-timeout-duration",level:3},{value:"<code>--update-timeout &lt;duration&gt;</code>",id:"--update-timeout-duration",level:3},{value:"<code>--erase</code>",id:"--erase",level:3}],v={toc:y},g="wrapper";function w(e){var t=e,{components:n}=t,r=m(t,["components"]);return(0,o.kt)(g,d(s(s({},v),r),{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",s({},{id:"lookup-table"}),"Lookup Table"),(0,o.kt)("p",null,"An in-memory hash table with a single key column for enriching with arbitrary\ndata."),(0,o.kt)("h2",s({},{id:"synopsis"}),"Synopsis"),(0,o.kt)("pre",null,(0,o.kt)("code",s({parentName:"pre"},{}),"context create  <name> lookup-table\ncontext update  <name> [--key <field>] [--erase]\n                       [--create-timeout <duration>]\n                       [--update-timeout <duration>]\ncontext delete  <name>\ncontext reset   <name>\ncontext save    <name>\ncontext load    <name>\ncontext inspect <name>\nenrich <name>\nlookup <name>\n")),(0,o.kt)("h2",s({},{id:"description"}),"Description"),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"lookup-table")," context behaves like an ordinary table with a unique key column\nto be used during enrichment."),(0,o.kt)("admonition",s({},{title:"IP and Subnet Optimization",type:"tip"}),(0,o.kt)("p",{parentName:"admonition"},"Lookup tables have one special optimization: if you use ",(0,o.kt)("inlineCode",{parentName:"p"},"subnet")," values as key\ntype, you can probe them with values of type ",(0,o.kt)("inlineCode",{parentName:"p"},"ip")," to perform a longest-prefix\nmatch on all subnets. That is, the lookup table will yield the closest/narrowest\nmatch."),(0,o.kt)("p",{parentName:"admonition"},"For example, consider a lookup table with keys ",(0,o.kt)("inlineCode",{parentName:"p"},"10.0.0.0/8")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"10.0.1.0/24"),".\nIf you perform a lookup with IP address ",(0,o.kt)("inlineCode",{parentName:"p"},"10.0.0.1"),", the first subnet will match,\nbut if you query with ",(0,o.kt)("inlineCode",{parentName:"p"},"10.0.1.1"),", the second subnet will match because it is\nmore specific.")),(0,o.kt)("p",null,"The following options are currently supported for the ",(0,o.kt)("inlineCode",{parentName:"p"},"lookup-table")," context:"),(0,o.kt)("h3",s({},{id:"--key-field"}),(0,o.kt)("inlineCode",{parentName:"h3"},"--key <field>")),(0,o.kt)("p",null,"The field in the input that holds the unique key for the lookup table."),(0,o.kt)("p",null,"Defaults to the first field of the input."),(0,o.kt)("h3",s({},{id:"--create-timeout-duration"}),"`",(0,o.kt)("inlineCode",{parentName:"h3"},"--create-timeout <duration>")),(0,o.kt)("p",null,"The time after which lookup table entries expire."),(0,o.kt)("p",null,"Defaults to no timeout."),(0,o.kt)("h3",s({},{id:"--update-timeout-duration"}),(0,o.kt)("inlineCode",{parentName:"h3"},"--update-timeout <duration>")),(0,o.kt)("p",null,"The time after which lookup table entries expire if they are not accessed."),(0,o.kt)("p",null,"Defaults to no timeout."),(0,o.kt)("h3",s({},{id:"--erase"}),(0,o.kt)("inlineCode",{parentName:"h3"},"--erase")),(0,o.kt)("p",null,"When updating a lookup table, erase fields with matching keys instead of adding\nnew entries."))}w.isMDXComponent=!0}}]);