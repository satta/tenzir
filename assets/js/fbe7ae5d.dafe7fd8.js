"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[45093],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>f});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),d=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=d(t.components);return r.createElement(l.Provider,{value:e},t.children)},s="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,l=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),s=d(n),c=a,f=s["".concat(l,".").concat(c)]||s[c]||k[c]||i;return n?r.createElement(f,o(o({ref:e},m),{},{components:n})):r.createElement(f,o({ref:e},m))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=c;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p[s]="string"==typeof t?t:a,o[1]=p;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},31187:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>u,default:()=>v,frontMatter:()=>f,metadata:()=>N,toc:()=>g});var r=n(3905),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(t,e,n)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,s=(t,e)=>{for(var n in e||(e={}))l.call(e,n)&&m(t,n,e[n]);if(p)for(var n of p(e))d.call(e,n)&&m(t,n,e[n]);return t},k=(t,e)=>i(t,o(e)),c=(t,e)=>{var n={};for(var r in t)l.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&p)for(var r of p(t))e.indexOf(r)<0&&d.call(t,r)&&(n[r]=t[r]);return n};const f={sidebar_custom_props:{operator:{source:!0}}},u="partitions",N={unversionedId:"operators/partitions",id:"operators/partitions",title:"partitions",description:"Retrieves metadata about events stored at a node.",source:"@site/docs/operators/partitions.md",sourceDirName:"operators",slug:"/operators/partitions",permalink:"/next/operators/partitions",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/operators/partitions.md",tags:[],version:"current",frontMatter:{sidebar_custom_props:{operator:{source:!0}}},sidebar:"docsSidebar",previous:{title:"parse",permalink:"/next/operators/parse"},next:{title:"pass",permalink:"/next/operators/pass"}},h={},g=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>&lt;expr&gt;</code>",id:"expr",level:3},{value:"Schemas",id:"schemas",level:2},{value:"<code>tenzir.partition</code>",id:"tenzirpartition",level:3},{value:"Examples",id:"examples",level:2}],b={toc:g},y="wrapper";function v(t){var e=t,{components:n}=e,a=c(e,["components"]);return(0,r.kt)(y,k(s(s({},b),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",s({},{id:"partitions"}),"partitions"),(0,r.kt)("p",null,"Retrieves metadata about events stored at a node."),(0,r.kt)("h2",s({},{id:"synopsis"}),"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{}),"partitions [<expr>]\n")),(0,r.kt)("h2",s({},{id:"description"}),"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"partitions")," operator shows a summary of candidate partitions at a node."),(0,r.kt)("h3",s({},{id:"expr"}),(0,r.kt)("inlineCode",{parentName:"h3"},"<expr>")),(0,r.kt)("p",null,"Show only partitions which would be considered for pipelines of the form\n",(0,r.kt)("inlineCode",{parentName:"p"},"export | where <expr>")," instead of returning all data."),(0,r.kt)("h2",s({},{id:"schemas"}),"Schemas"),(0,r.kt)("p",null,"Tenzir emits partition information with the following schema:"),(0,r.kt)("h3",s({},{id:"tenzirpartition"}),(0,r.kt)("inlineCode",{parentName:"h3"},"tenzir.partition")),(0,r.kt)("p",null,"Contains detailed information about a partition."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",s({parentName:"tr"},{align:"left"}),"Field"),(0,r.kt)("th",s({parentName:"tr"},{align:"left"}),"Type"),(0,r.kt)("th",s({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"uuid")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The unique ID of the partition in the UUIDv4 format.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"memusage")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"uint64")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The memory usage of the partition in bytes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"diskusage")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"uint64")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The disk usage of the partition in bytes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"events")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"uint64")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The number of events contained in the partition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"min_import_time")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"time")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The time at which the first event of the partition arrived at the ",(0,r.kt)("inlineCode",{parentName:"td"},"import")," operator.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"max_import_time")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"time")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The time at which the last event of the partition arrived at the ",(0,r.kt)("inlineCode",{parentName:"td"},"import")," operator.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"version")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"uint64")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The version number of the internal partition storage format.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"schema")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The schema name of the events contained in the partition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"schema_id")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"A unique identifier for the physical layout of the partition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"store")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"record")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"Resource information about the partition's store.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"indexes")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"record")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"Resource information about the partition's indexes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"sketches")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"record")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"Resource information about the partition's sketches.")))),(0,r.kt)("p",null,"The records ",(0,r.kt)("inlineCode",{parentName:"p"},"store"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"indexes"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"sketches")," have the following schema:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",s({parentName:"tr"},{align:"left"}),"Field"),(0,r.kt)("th",s({parentName:"tr"},{align:"left"}),"Type"),(0,r.kt)("th",s({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"url")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The URL of the resource.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"size")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),(0,r.kt)("inlineCode",{parentName:"td"},"uint64")),(0,r.kt)("td",s({parentName:"tr"},{align:"left"}),"The size of the resource.")))),(0,r.kt)("h2",s({},{id:"examples"}),"Examples"),(0,r.kt)("p",null,"Get an overview of the memory and disk requirements for all stored data sorted\nby schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{}),"partitions\n| summarize events=sum(events),\n            diskusage=sum(diskusage),\n            memusage=sum(memusage)\n  by schema\n| sort schema\n")),(0,r.kt)("p",null,"Get an upper bound for the number of events that could contain the IP address\n127.0.0.1:"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{}),"partitions :ip == 127.0.0.1\n| summarize candidates=sum(events)\n")),(0,r.kt)("p",null,"See how many partitions contain a non-null value for the field ",(0,r.kt)("inlineCode",{parentName:"p"},"hostname"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{}),"partitions hostname != null\n")))}v.isMDXComponent=!0}}]);